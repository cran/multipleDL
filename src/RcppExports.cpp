// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hessian
List hessian(int n, int p, int kint, int nx, NumericMatrix x, IntegerVector y, IntegerVector delta, NumericVector pr, NumericVector fa, NumericVector fb, NumericVector fpa, NumericVector fpb, NumericVector fppa, NumericVector fppb, int l, int lia);
RcppExport SEXP _multipleDL_hessian(SEXP nSEXP, SEXP pSEXP, SEXP kintSEXP, SEXP nxSEXP, SEXP xSEXP, SEXP ySEXP, SEXP deltaSEXP, SEXP prSEXP, SEXP faSEXP, SEXP fbSEXP, SEXP fpaSEXP, SEXP fpbSEXP, SEXP fppaSEXP, SEXP fppbSEXP, SEXP lSEXP, SEXP liaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type kint(kintSEXP);
    Rcpp::traits::input_parameter< int >::type nx(nxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pr(prSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fa(faSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fb(fbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fpa(fpaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fpb(fpbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fppa(fppaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fppb(fppbSEXP);
    Rcpp::traits::input_parameter< int >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type lia(liaSEXP);
    rcpp_result_gen = Rcpp::wrap(hessian(n, p, kint, nx, x, y, delta, pr, fa, fb, fpa, fpb, fppa, fppb, l, lia));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4multipe_dls_cpm_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_multipleDL_hessian", (DL_FUNC) &_multipleDL_hessian, 16},
    {"_rcpp_module_boot_stan_fit4multipe_dls_cpm_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4multipe_dls_cpm_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_multipleDL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
